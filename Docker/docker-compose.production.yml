version: "3"

services:
  auth:
    env_file:
      - ./env/node/production.env
    build:
      context: ..
      dockerfile: ./Docker/auth.dockerfile
    volumes:
      - ../src:/poet/src
    networks:
      - http
      - queue
      - outside
    ports:
      - "5000:5000"
  notifications:
    env_file:
      - ./env/node/production.env
    build:
      context: ..
      dockerfile: ./Docker/notifications.dockerfile
    volumes:
      - ../src:/poet/src
    networks:
      - http
      - queue
      - outside
      - db
    ports:
      - "5500:5500"
  mock-signer:
    env_file:
      - ./env/node/production.env
    build:
      context: ..
      dockerfile: ./Docker/mock-signer.dockerfile
    volumes:
      - ../src:/poet/src
    networks:
      - http
  bitcoin-scanner:
    env_file:
      - ./env/node/production.env
    build:
      context: ..
      dockerfile: ./Docker/bitcoin-scanner.dockerfile
    volumes:
      - ../src:/poet/src
    networks:
      - queue
      - outside
  claims-to-db:
    env_file:
      - ./env/node/production.env
    build:
      context: ..
      dockerfile: ./Docker/claims-to-db.dockerfile
    volumes:
      - ../src:/poet/src
    networks:
      - queue
      - outside
      - db
  retry-eval:
    env_file:
      - ./env/node/production.env
    build:
      context: ..
      dockerfile: ./Docker/retry-eval.dockerfile
    volumes:
      - ../src:/poet/src
    networks:
      - queue
      - outside
      - db
  explorer:
    env_file:
      - ./env/node/production.env
    build:
      context: ..
      dockerfile: ./Docker/explorer.dockerfile
    volumes:
      - ../src:/poet/src
    networks:
      - db
      - http
  torrent-system:
    env_file:
      - ./env/node/production.env
    build:
      context: ..
      dockerfile: ./Docker/torrent-system.dockerfile
    volumes:
      - ../src:/poet/src
      - ../torrents:/poet/torrents
    networks:
      - queue
      - http
      - outside
    ports:
      - "15321:15321"
      - "7800:7800"
  trusted-publisher:
    env_file:
      - ./env/node/production.env
    build:
      context: ..
      dockerfile: ./Docker/trusted-publisher.dockerfile
    volumes:
      - ../src:/poet/src
    networks:
      - queue
      - http
      - outside
    ports:
      - "3001:3001"
    depends_on:
      - explorer
  rabbitmq:
    env_file:
      - ./env/node/production.env
    build:
      context: ..
      dockerfile: ./Docker/queue.dockerfile
    networks:
      - queue
    hostname: rabbitmq
  db:
    build:
      context: ..
      dockerfile: ./Docker/db.dockerfile
    volumes:
      - ./postgres:/var/lib/postgresql/data
    networks:
      - db

  nginx:
    container_name: nginx
    build:
      context: ..
      dockerfile: ./Docker/nginx.dockerfile
    restart: always
    networks:
      - http
      - outside
    ports:
      - 8080:8080
    links:
      - explorer
      - auth
      - trusted-publisher
      - mock-signer
    depends_on:
      - explorer
      - auth
      - trusted-publisher
      - mock-signer

networks:
  db:
    internal: true
  queue:
    internal: true
  http:
    internal: true
  outside:
    driver: bridge
